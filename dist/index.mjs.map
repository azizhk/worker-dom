{"version":3,"file":"index.mjs","sources":["../output/main-thread/strings.js","../output/main-thread/nodes.js","../output/main-thread/worker.js","../output/main-thread/command.js","../output/main-thread/hydrator.js","../output/main-thread/mutator.js","../output/main-thread/install.js","../output/main-thread/index.js"],"sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet count = 0;\nconst STRINGS = new Map();\n/**\n * Return a string for the specified index.\n * @param index string index to retrieve.\n * @returns string in map for the index.\n */\nexport function getString(index) {\n    return STRINGS.get(index) || '';\n}\n/**\n * Stores a string for parsing from mutation\n * @param value string to store from background thread.\n */\nexport function storeString(value) {\n    STRINGS.set(++count, value);\n}\n//# sourceMappingURL=strings.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getString } from './strings';\nlet NODES;\nlet BASE_ELEMENT;\nexport function prepare(baseElement) {\n    NODES = new Map([[1, baseElement], [2, baseElement]]);\n    BASE_ELEMENT = baseElement;\n}\nexport function isTextNode(node) {\n    return ('nodeType' in node ? node.nodeType : node[0 /* nodeType */]) === 3 /* TEXT_NODE */;\n}\n/**\n * Create a real DOM Node from a skeleton Object (`{ nodeType, nodeName, attributes, children, data }`)\n * @example <caption>Text node</caption>\n *   createNode({ nodeType:3, data:'foo' })\n * @example <caption>Element node</caption>\n *   createNode({ nodeType:1, nodeName:'div', attributes:[{ name:'a', value:'b' }], childNodes:[ ... ] })\n */\nexport function createNode(skeleton) {\n    if (isTextNode(skeleton)) {\n        const node = document.createTextNode(getString(skeleton[5 /* textContent */]));\n        storeNode(node, skeleton[7 /* _index_ */]);\n        return node;\n    }\n    const namespace = skeleton[6 /* namespaceURI */] !== undefined ? getString(skeleton[6 /* namespaceURI */]) : undefined;\n    const node = namespace\n        ? document.createElementNS(namespace, getString(skeleton[1 /* nodeName */]))\n        : document.createElement(getString(skeleton[1 /* nodeName */]));\n    // TODO(KB): Restore Properties\n    // skeleton.properties.forEach(property => {\n    //   node[`${property.name}`] = property.value;\n    // });\n    // ((skeleton as TransferrableElement)[TransferrableKeys.childNodes] || []).forEach(childNode => {\n    //   if (childNode[TransferrableKeys.transferred] === NumericBoolean.FALSE) {\n    //     node.appendChild(createNode(childNode as TransferrableNode));\n    //   }\n    // });\n    storeNode(node, skeleton[7 /* _index_ */]);\n    return node;\n}\n/**\n * Returns the real DOM Element corresponding to a serialized Element object.\n * @param id\n * @return\n */\nexport function getNode(id) {\n    const node = NODES.get(id);\n    if (node && node.nodeName === 'BODY') {\n        // If the node requested is the \"BODY\"\n        // Then we return the base node this specific <amp-script> comes from.\n        // This encapsulates each <amp-script> node.\n        return BASE_ELEMENT;\n    }\n    return node;\n}\n/**\n * Establish link between DOM `node` and worker-generated identifier `id`.\n *\n * These _shouldn't_ collide between instances of <amp-script> since\n * each element creates it's own pool on both sides of the worker\n * communication bridge.\n * @param node\n * @param id\n */\nexport function storeNode(node, id) {\n    node._index_ = id;\n    NODES.set(id, node);\n}\n//# sourceMappingURL=nodes.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(KB): Fetch Polyfill for IE11.\nexport function createWorker(workerDomURL, authorScriptURL) {\n    return Promise.all([fetch(workerDomURL).then(response => response.text()), fetch(authorScriptURL).then(response => response.text())])\n        .then(([workerScript, authorScript]) => {\n        // TODO(KB): Minify this output during build process.\n        const keys = [];\n        for (let key in document.body.style) {\n            keys.push(`'${key}'`);\n        }\n        const code = `\n        'use strict';\n        ${workerScript}\n        (function() {\n          var self = this;\n          var window = this;\n          var document = this.document;\n          var localStorage = this.localStorage;\n          var location = this.location;\n          var defaultView = document.defaultView;\n          var Node = defaultView.Node;\n          var Text = defaultView.Text;\n          var Element = defaultView.Element;\n          var SVGElement = defaultView.SVGElement;\n          var Document = defaultView.Document;\n          var Event = defaultView.Event;\n          var MutationObserver = defaultView.MutationObserver;\n\n          function addEventListener(type, handler) {\n            return document.addEventListener(type, handler);\n          }\n          function removeEventListener(type, handler) {\n            return document.removeEventListener(type, handler);\n          }\n          this.appendKeys([${keys}]);\n          ${authorScript}\n        }).call(WorkerThread.workerDOM);\n//# sourceURL=${encodeURI(authorScriptURL)}`;\n        return new Worker(URL.createObjectURL(new Blob([code])));\n    })\n        .catch(error => {\n        return null;\n    });\n}\nexport function messageToWorker(worker, message) {\n    worker.postMessage(message);\n}\n//# sourceMappingURL=worker.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { messageToWorker } from './worker';\nimport { getNode } from './nodes';\nimport { getString } from './strings';\nconst KNOWN_LISTENERS = [];\n/**\n * Instead of a whitelist of elements that need their value tracked, use the existence\n * of a property called value to drive the decision.\n * @param node node to check if values should be tracked.\n * @return boolean if the node should have its value property tracked.\n */\nconst shouldTrackChanges = (node) => node && 'value' in node;\n/**\n * When a node that has a value needing synced doesn't already have an event listener\n * listening for changed values, ensure the value is synced with a default listener.\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const applyDefaultChangeListener = (worker, node) => {\n    shouldTrackChanges(node) && node.onchange === null && (node.onchange = () => fireValueChange(worker, node));\n};\n/**\n * Tell the worker DOM what the value is for a Node.\n * @param worker whom to dispatch value toward.\n * @param node where to get the value from.\n */\nconst fireValueChange = (worker, node) => {\n    messageToWorker(worker, {\n        [9 /* type */]: 5 /* SYNC */,\n        [38 /* sync */]: {\n            [7 /* _index_ */]: node._index_,\n            [18 /* value */]: node.value,\n        },\n    });\n};\n/**\n * Register an event handler for dispatching events to worker thread\n * @param worker whom to dispatch events toward\n * @param _index_ node index the event comes from (used to dispatchEvent in worker thread).\n * @return eventHandler function consuming event and dispatching to worker thread\n */\nconst eventHandler = (worker, _index_) => (event) => {\n    if (shouldTrackChanges(event.currentTarget)) {\n        fireValueChange(worker, event.currentTarget);\n    }\n    messageToWorker(worker, {\n        [9 /* type */]: 1 /* EVENT */,\n        [37 /* event */]: {\n            [7 /* _index_ */]: _index_,\n            [22 /* bubbles */]: event.bubbles,\n            [23 /* cancelable */]: event.cancelable,\n            [24 /* cancelBubble */]: event.cancelBubble,\n            [25 /* currentTarget */]: {\n                [7 /* _index_ */]: event.currentTarget._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [26 /* defaultPrevented */]: event.defaultPrevented,\n            [27 /* eventPhase */]: event.eventPhase,\n            [28 /* isTrusted */]: event.isTrusted,\n            [29 /* returnValue */]: event.returnValue,\n            [10 /* target */]: {\n                [7 /* _index_ */]: event.target._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [30 /* timeStamp */]: event.timeStamp,\n            [9 /* type */]: event.type,\n            [32 /* keyCode */]: 'keyCode' in event ? event.keyCode : undefined,\n        },\n    });\n};\n/**\n * Process commands transfered from worker thread to main thread.\n * @param nodesInstance nodes instance to execute commands against.\n * @param worker whom to dispatch events toward.\n * @param mutation mutation record containing commands to execute.\n */\nexport function process(worker, mutation) {\n    const _index_ = mutation[10 /* target */];\n    const target = getNode(_index_);\n    (mutation[21 /* removedEvents */] || []).forEach(eventSub => {\n        processListenerChange(worker, target, false, getString(eventSub[9 /* type */]), eventSub[33 /* index */]);\n    });\n    (mutation[20 /* addedEvents */] || []).forEach(eventSub => {\n        processListenerChange(worker, target, true, getString(eventSub[9 /* type */]), eventSub[33 /* index */]);\n    });\n}\n/**\n * If the worker requests to add an event listener to 'change' for something the foreground thread is already listening to\n * ensure that only a single 'change' event is attached to prevent sending values multiple times.\n * @param worker worker issuing listener changes\n * @param target node to change listeners on\n * @param addEvent is this an 'addEvent' or 'removeEvent' change\n * @param type event type requested to change\n * @param index number in the listeners array this event corresponds to.\n */\nexport function processListenerChange(worker, target, addEvent, type, index) {\n    let changeEventSubscribed = target.onchange !== null;\n    const shouldTrack = shouldTrackChanges(target);\n    const isChangeEvent = type === 'change';\n    if (addEvent) {\n        if (isChangeEvent) {\n            changeEventSubscribed = true;\n            target.onchange = null;\n        }\n        target.addEventListener(type, (KNOWN_LISTENERS[index] = eventHandler(worker, target._index_)));\n    }\n    else {\n        if (isChangeEvent) {\n            changeEventSubscribed = false;\n        }\n        target.removeEventListener(type, KNOWN_LISTENERS[index]);\n    }\n    if (shouldTrack && !changeEventSubscribed) {\n        applyDefaultChangeListener(worker, target);\n    }\n}\n//# sourceMappingURL=command.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { storeNode, getNode, createNode, isTextNode } from './nodes';\nimport { storeString, getString } from './strings';\nimport { applyDefaultChangeListener, processListenerChange } from './command';\nfunction allTextNodes(nodes) {\n    return nodes.length > 0 && [].every.call(nodes, isTextNode);\n}\n/**\n * Replace all the children with the ones from the HydrateableNode.\n * Used when we're certain the content won't break the page.\n * @param nodes HydrateableNodes containing content to potentially overwrite main thread content.\n * @param parent Node in the main thread that will be the parent of the passed nodes.\n * @param worker worker that issued the request for hydration.\n */\nfunction replaceNodes(nodes, parent, worker) {\n    [].forEach.call(parent.childNodes, (childNode) => childNode.remove());\n    nodes.forEach((node, index) => {\n        const newNode = createNode(node);\n        (node[2 /* attributes */] || []).forEach(attribute => {\n            const namespaceURI = getString(attribute[0]);\n            if (namespaceURI !== 'null') {\n                newNode.setAttributeNS(namespaceURI, getString(attribute[1]), getString(attribute[2]));\n            }\n            else {\n                newNode.setAttribute(getString(attribute[1]), getString(attribute[2]));\n            }\n        });\n        parent.appendChild(newNode);\n        applyDefaultChangeListener(worker, newNode);\n        replaceNodes(node[4 /* childNodes */] || [], parent.childNodes[index], worker);\n    });\n}\n/**\n * Hydrate a single node and it's children safely.\n * Attempt to ensure content is a rough match so content doesn't shift between the document representation\n * and client side generated content.\n * @param transferNode root of the background thread content (document.body from worker-thread).\n * @param node root for the foreground thread content (element upgraded to background driven).\n * @param worker worker that issued the request for hydration.\n */\nfunction hydrateNode(transferNode, node, worker) {\n    const transferIsText = isTextNode(transferNode);\n    const nodeIsText = isTextNode(node);\n    if (!transferIsText && !nodeIsText) {\n        const childNodes = transferNode[4 /* childNodes */] || [];\n        if (childNodes.length !== node.childNodes.length) {\n            // If this parent node has an unequal number of childNodes, we need to ensure its for an allowable reason.\n            if (allTextNodes(childNodes) && allTextNodes(node.childNodes)) {\n                // Offset due to a differing number of text nodes.\n                // replace the current DOM with the text nodes from the hydration.\n                replaceNodes(childNodes, node, worker);\n            }\n            else {\n                const filteredTransfer = childNodes.filter(childNode => !isTextNode(childNode));\n                const filteredNodes = [].filter.call(node.childNodes, (childNode) => !isTextNode(childNode));\n                // Empty text nodes are used by frameworks as placeholders for future dom content.\n                if (filteredTransfer.length === filteredNodes.length) {\n                    storeNode(node, transferNode[7 /* _index_ */]);\n                    replaceNodes(childNodes, node, worker);\n                }\n            }\n        }\n        else {\n            storeNode(node, transferNode[7 /* _index_ */]);\n            applyDefaultChangeListener(worker, node);\n            // Same number of children, hydrate them.\n            childNodes.forEach((childNode, index) => hydrateNode(childNode, node.childNodes[index], worker));\n        }\n    }\n    else if (transferIsText && nodeIsText) {\n        // Singular text node, no children.\n        storeNode(node, transferNode[7 /* _index_ */]);\n        node.textContent = getString(transferNode[5 /* textContent */]);\n        applyDefaultChangeListener(worker, node);\n    }\n}\n/**\n * Hydrate a root from the worker thread by comparing with the main thread representation.\n * @param skeleton root of the background thread content.\n * @param addEvents events needing subscription from the background thread content.\n * @param baseElement root of the main thread content to compare against.\n * @param worker worker issuing the upgrade request.\n */\nexport function hydrate(skeleton, stringValues, addEvents, baseElement, worker) {\n    // Process String Additions\n    stringValues.forEach(value => storeString(value));\n    // Process Node Addition / Removal\n    hydrateNode(skeleton, baseElement, worker);\n    // Process Event Addition\n    addEvents.forEach(event => {\n        const node = getNode(event[7 /* _index_ */]);\n        node && processListenerChange(worker, node, true, getString(event[9 /* type */]), event[33 /* index */]);\n    });\n}\n//# sourceMappingURL=hydrator.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNode, createNode } from './nodes';\nimport { storeString, getString } from './strings';\nimport { process } from './command';\nlet MUTATION_QUEUE = [];\nlet PENDING_MUTATIONS = false;\nlet worker;\nexport function prepareMutate(passedWorker) {\n    worker = passedWorker;\n}\nconst mutators = {\n    [2 /* CHILD_LIST */](mutation, target, sanitizer) {\n        (mutation[12 /* removedNodes */] || []).forEach(node => getNode(node[7 /* _index_ */]).remove());\n        const addedNodes = mutation[11 /* addedNodes */];\n        const nextSibling = mutation[14 /* nextSibling */];\n        if (addedNodes) {\n            addedNodes.forEach(node => {\n                let newChild = getNode(node[7 /* _index_ */]);\n                if (!newChild) {\n                    newChild = createNode(node);\n                    if (sanitizer) {\n                        sanitizer.sanitize(newChild); // TODO(choumx): Inform worker?\n                    }\n                }\n                target.insertBefore(newChild, (nextSibling && getNode(nextSibling[7 /* _index_ */])) || null);\n            });\n        }\n    },\n    [0 /* ATTRIBUTES */](mutation, target, sanitizer) {\n        const attributeName = mutation[15 /* attributeName */] !== undefined ? getString(mutation[15 /* attributeName */]) : null;\n        const value = mutation[18 /* value */] !== undefined ? getString(mutation[18 /* value */]) : null;\n        if (attributeName != null && value != null) {\n            if (!sanitizer || sanitizer.validAttribute(target.nodeName, attributeName, value)) {\n                target.setAttribute(attributeName, value);\n            }\n            else {\n                // TODO(choumx): Inform worker?\n            }\n        }\n    },\n    [1 /* CHARACTER_DATA */](mutation, target) {\n        const value = mutation[18 /* value */];\n        if (value) {\n            // Sanitization not necessary for textContent.\n            target.textContent = getString(value);\n        }\n    },\n    [3 /* PROPERTIES */](mutation, target, sanitizer) {\n        const propertyName = mutation[17 /* propertyName */] !== undefined ? getString(mutation[17 /* propertyName */]) : null;\n        const value = mutation[18 /* value */] !== undefined ? getString(mutation[18 /* value */]) : null;\n        if (propertyName && value) {\n            if (!sanitizer || sanitizer.validProperty(target.nodeName, propertyName, value)) {\n                target[propertyName] = value;\n            }\n            else {\n                // TODO(choumx): Inform worker?\n            }\n        }\n    },\n    [4 /* COMMAND */](mutation) {\n        process(worker, mutation);\n    },\n};\n/**\n * Process MutationRecords from worker thread applying changes to the existing DOM.\n * @param nodes New nodes to add in the main thread with the incoming mutations.\n * @param mutations Changes to apply in both graph shape and content of Elements.\n * @param sanitizer Sanitizer to apply to content if needed.\n */\nexport function mutate(nodes, stringValues, mutations, sanitizer) {\n    //mutations: TransferrableMutationRecord[]): void {\n    // TODO(KB): Restore signature requiring lastMutationTime. (lastGestureTime: number, mutations: TransferrableMutationRecord[])\n    // if (performance.now() || Date.now() - lastGestureTime > GESTURE_TO_MUTATION_THRESHOLD) {\n    //   return;\n    // }\n    // this.lastGestureTime = lastGestureTime;\n    stringValues.forEach(value => storeString(value));\n    nodes.forEach(node => createNode(node));\n    MUTATION_QUEUE = MUTATION_QUEUE.concat(mutations);\n    if (!PENDING_MUTATIONS) {\n        PENDING_MUTATIONS = true;\n        requestAnimationFrame(() => syncFlush(sanitizer));\n    }\n}\n/**\n * Apply all stored mutations syncronously. This method works well, but can cause jank if there are too many\n * mutations to apply in a single frame.\n *\n * Investigations in using asyncFlush to resolve are worth considering.\n */\nfunction syncFlush(sanitizer) {\n    MUTATION_QUEUE.forEach(mutation => {\n        mutators[mutation[9 /* type */]](mutation, getNode(mutation[10 /* target */]), sanitizer);\n    });\n    MUTATION_QUEUE = [];\n    PENDING_MUTATIONS = false;\n}\n//# sourceMappingURL=mutator.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { hydrate } from './hydrator';\nimport { prepareMutate, mutate } from './mutator';\nimport { createWorker } from './worker';\nimport { prepare as prepareNodes } from './nodes';\nexport function install(baseElement, workerDOMUrl, sanitizer) {\n    const authorURL = baseElement.getAttribute('src');\n    if (authorURL === null) {\n        return;\n    }\n    createWorker(workerDOMUrl, authorURL).then(worker => {\n        if (worker === null) {\n            return;\n        }\n        prepareNodes(baseElement);\n        prepareMutate(worker);\n        worker.onmessage = ({ data }) => {\n            switch (data[9 /* type */]) {\n                case 2 /* HYDRATE */:\n                    // console.info(`hydration from worker: ${data.type}`, data);\n                    hydrate(data[35 /* nodes */], data[39 /* strings */], data[20 /* addedEvents */], baseElement, worker);\n                    break;\n                case 3 /* MUTATE */:\n                    // console.info(`mutation from worker: ${data.type}`, data);\n                    mutate(data[35 /* nodes */], data[39 /* strings */], data[34 /* mutations */], sanitizer);\n                    break;\n            }\n        };\n    });\n}\n//# sourceMappingURL=install.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { install } from './install';\nexport function upgradeElement(baseElement, workerDOMUrl) {\n    install(baseElement, workerDOMUrl);\n}\n//# sourceMappingURL=index.js.map"],"names":["count","STRINGS","Map","getString","index","get","NODES","BASE_ELEMENT","prepare","baseElement","isTextNode","node","nodeType","createNode","skeleton","document","createTextNode","storeNode","namespace","undefined","createElementNS","createElement","getNode","id","nodeName","_index_","set","createWorker","workerDomURL","authorScriptURL","Promise","all","fetch","then","response","text","workerScript","authorScript","keys","key","body","style","push","code","encodeURI","Worker","URL","createObjectURL","Blob","catch","KNOWN_LISTENERS","applyDefaultChangeListener","worker","onchange","node.onchange","postMessage","message","value","eventHandler","event","currentTarget","bubbles","cancelable","cancelBubble","defaultPrevented","eventPhase","isTrusted","returnValue","target","timeStamp","type","keyCode","process","mutation","eventSub","processListenerChange","addEvent","changeEventSubscribed","shouldTrack","isChangeEvent","addEventListener","removeEventListener","allTextNodes","nodes","length","every","call","replaceNodes","parent","childNodes","childNode","remove","forEach","newNode","attribute","namespaceURI","setAttributeNS","setAttribute","appendChild","hydrateNode","transferNode","transferIsText","nodeIsText","textContent","filteredTransfer","filter","filteredNodes","hydrate","stringValues","addEvents","MUTATION_QUEUE","PENDING_MUTATIONS","mutators","sanitizer","addedNodes","nextSibling","newChild","sanitize","insertBefore","attributeName","validAttribute","propertyName","validProperty","mutate","mutations","concat","requestAnimationFrame","syncFlush","install","workerDOMUrl","authorURL","getAttribute","prepareNodes","onmessage","data","worker.onmessage","upgradeElement"],"mappings":"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"}